version: '3.8'

services:
  api:
    hostname: api
    build:
      context: ./Backend
      dockerfile: Dockerfile
    container_name: fastapi-vt
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
    volumes:
      - ./Backend:/app

  db:
    image: postgres:latest
    container_name: postgres-db
    environment:
      POSTGRES_DB: virustotaldb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    
  db_mcp:
    image: postgres:15
    container_name: cybersec_db
    restart: always
    environment:
      POSTGRES_USER: pguser
      POSTGRES_PASSWORD: pgpass
      POSTGRES_DB: cybersec
    volumes:
      - db_mcp_data:/var/lib/postgresql/data
      - ./pg_db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5433:5432"

  fastapi:
    build:
      context: .
      dockerfile: mcp-client/Dockerfile
    container_name: cybersec_fastapi_mcp
    env_file:
      - ./mcp-client/.env
    depends_on:
      - db_mcp
    ports:
      - "8001:8000"

  kong:
    image: kong:3.2
    container_name: kong
    hostname: kong
    restart: always
    ports:
      - "8002:8000"   # public proxy port
      - "8003:8001"   # admin API port
    volumes:
      - ./kong/kong.yml:/usr/local/kong/declarative/kong.yml:ro
    environment:
      KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yml
      KONG_DATABASE: "off"
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr

  app:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    depends_on:
      - kong
      - fastapi
      - api
    ports:
      - "3000:3000"
    volumes:
      - /app/node_modules
    environment:
      - VITE_API_URL=http://localhost:8002/api  # Si tienes un backend en otro contenedor
    command: ["npm", "run", "serve"]
  
  adminer:
    image: adminer
    restart: always
    ports:
      - "8081:8080"

volumes:
  postgres_data:
  db_mcp_data:
